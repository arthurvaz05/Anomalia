if(exists("df_final")){
df_final <- rbind(df_final, seq_window)
} else {
df_final <- seq_window
}
}
rm(df_final)
for (i in colnames(gecco_sample)[colnames(gecco_sample) != "event"]){
model <- hanct_kmeans(seq = 5, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample$event)
seq_window$recall <- evaluation$recall
seq_window$precision <- evaluation$precision
seq_window$F1 <- evaluation$F1
# conditional if df_final exists then rbind else create df_final
if(exists("df_final")){
df_final <- rbind(df_final, seq_window)
} else {
df_final <- seq_window
}
}
rm(df_final)
for (i in colnames(gecco_sample)[colnames(gecco_sample) != "event"]){
model <- hanct_kmeans(seq = 5, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample$event)
seq_window$recall <- evaluation$recall
seq_window$precision <- evaluation$precision
seq_window$F1 <- evaluation$F1
# conditional if df_final exists then rbind else create df_final
if(exists("df_final")){
df_final <- rbind(df_final, seq_window)
} else {
df_final <- seq_window
}
}
View(seq_window)
evaluation$recall
evaluation$precision
evaluation$F1
sum(gecco_sample$event)
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample[,'event'])
print(evaluation$confMatrix)
evaluation$recall
evaluation$precision
evaluation$F1
colnames(gecco_sample)
i <- 'cl'
model <- hanct_kmeans(seq = 5, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample[,'event'])
print(evaluation$confMatrix)
evaluation$recall
evaluation$precision
evaluation$F1
rm(df_final)
for (i in colnames(gecco_sample)[colnames(gecco_sample) != "event"]){
model <- hanct_kmeans(seq = 5, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
print(i)
# evaluating the detections
evaluation <- evaluate(model, detection$event, dataset$event)
seq_window$recall <- evaluation$recall
seq_window$precision <- evaluation$precision
seq_window$F1 <- evaluation$F1
# conditional if df_final exists then rbind else create df_final
if(exists("df_final")){
df_final <- rbind(df_final, seq_window)
} else {
df_final <- seq_window
}
}
for (i in colnames(gecco_sample)[colnames(gecco_sample) != "event"]){
model <- hanct_kmeans(seq = 5, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
print(i)
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample[,'event'])
seq_window$recall <- evaluation$recall
seq_window$precision <- evaluation$precision
seq_window$F1 <- evaluation$F1
# conditional if df_final exists then rbind else create df_final
if(exists("df_final")){
df_final <- rbind(df_final, seq_window)
} else {
df_final <- seq_window
}
}
colnames(gecco_sample)
for (i in colnames(gecco_sample)[colnames(gecco_sample) != c("event",'seq')]){
model <- hanct_kmeans(seq = 5, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
print(i)
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample[,'event'])
seq_window$recall <- evaluation$recall
seq_window$precision <- evaluation$precision
seq_window$F1 <- evaluation$F1
# conditional if df_final exists then rbind else create df_final
if(exists("df_final")){
df_final <- rbind(df_final, seq_window)
} else {
df_final <- seq_window
}
}
colnames(gecco_sample)[colnames(gecco_sample) != c("event",'seq')]
# filter colnames without event and seq
colnames(gecco_sample)[colnames(gecco_sample) != c("event",'seq')]
# filter colnames without event and seq
colnames(gecco_sample)[!colnames(gecco_sample) %in% c("event", "seq")]
for (i in colnames(gecco_sample)[colnames(gecco_sample) != "event"]){
model <- hanct_kmeans(seq = 5, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
print(i)
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample[,'event'])
seq_window$recall <- evaluation$recall
seq_window$precision <- evaluation$precision
seq_window$F1 <- evaluation$F1
# conditional if df_final exists then rbind else create df_final
if(exists("df_final")){
df_final <- rbind(df_final, seq_window)
} else {
df_final <- seq_window
}
}
# Base directory for the datasets
base_dir <- "/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/Dataset"
# List of dataset filenames (without the base directory)
filenames <- c(
"gecco_sample.RData",
"nab_sample.RData",
"oil_3w_sample.RData",
"rare_sample.RData",
"ucr_sample.RData",
"yahoo_sample.RData"
)
load(file.path(base_dir,filenames[1]))
colnames(gecco_sample)
i <- 'cl'
model <- hanct_kmeans(seq = 5, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample[,'event'])
print(evaluation$confMatrix)
evaluation$recall
evaluation$precision
evaluation$F1
sum(gecco_sample$event)
for (i in colnames(gecco_sample)[colnames(gecco_sample) != "event"]){
model <- hanct_kmeans(seq = 5, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
print(i)
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample[,'event'])
seq_window$recall <- evaluation$recall
seq_window$precision <- evaluation$precision
seq_window$F1 <- evaluation$F1
# conditional if df_final exists then rbind else create df_final
if(exists("df_final")){
df_final <- rbind(df_final, seq_window)
} else {
df_final <- seq_window
}
}
colnames(gecco_sample)
colnames(gecco_sample)[colnames(gecco_sample) != "event"]
i <- 'fm_2'
model <- hanct_kmeans(seq = 5, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample[,'event'])
print(evaluation$confMatrix)
evaluation$recall
evaluation$precision
evaluation$F1
rm(df_final)
for (i in colnames(gecco_sample)[colnames(gecco_sample) != "event"]){
model <- hanct_kmeans(seq = 5, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
print(i)
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample[,'event'])
seq_window$recall <- evaluation$recall
seq_window$precision <- evaluation$precision
seq_window$F1 <- evaluation$F1
# conditional if df_final exists then rbind else create df_final
if(exists("df_final")){
df_final <- rbind(df_final, seq_window)
} else {
df_final <- seq_window
}
}
colnames(gecco_sample)
rm(df_final)
for (i in colnames(gecco_sample)[colnames(gecco_sample) != "event"]){
model <- hanct_kmeans(seq = 5, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
print(i)
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample[,'event'])
seq_window$recall <- evaluation$recall
seq_window$precision <- evaluation$precision
seq_window$F1 <- evaluation$F1
# conditional if df_final exists then rbind else create df_final
if(exists("df_final")){
df_final <- rbind(df_final, seq_window)
} else {
df_final <- seq_window
}
}
# Base directory for the datasets
base_dir <- "/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/Dataset"
# List of dataset filenames (without the base directory)
filenames <- c(
"gecco_sample.RData",
"nab_sample.RData",
"oil_3w_sample.RData",
"rare_sample.RData",
"ucr_sample.RData",
"yahoo_sample.RData"
)
load(file.path(base_dir,filenames[1]))
colnames(gecco_sample)
i <- 'fm_2'
model <- hanct_kmeans(seq = 5, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample[,'event'])
print(evaluation$confMatrix)
evaluation$recall
evaluation$precision
evaluation$F1
sum(gecco_sample$event)
colnames(gecco_sample)
for (i in colnames(gecco_sample)[colnames(gecco_sample) != "event"]){
model <- hanct_kmeans(seq = 5, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
print(i)
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample[,'event'])
seq_window$recall <- evaluation$recall
seq_window$precision <- evaluation$precision
seq_window$F1 <- evaluation$F1
# conditional if df_final exists then rbind else create df_final
if(exists("df_final")){
df_final <- rbind(df_final, seq_window)
} else {
df_final <- seq_window
}
}
evaluation$recall
rm(df_final)
for (i in colnames(gecco_sample)[colnames(gecco_sample) != "event"]){
model <- hanct_kmeans(seq = 5, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
print(i)
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample[,'event'])
seq_window$TN <- evaluation$TN
seq_window$FN <- evaluation$FN
seq_window$FP <- evaluation$FP
seq_window$TP <- evaluation$TP
# conditional if df_final exists then rbind else create df_final
if(exists("df_final")){
df_final <- rbind(df_final, seq_window)
} else {
df_final <- seq_window
}
}
for (i in colnames(gecco_sample)[colnames(gecco_sample) != "event"]){
model <- hanct_kmeans(seq = 5, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
print(i)
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample[,'event'])
seq_window$TN <- evaluation$TN
seq_window$FN <- evaluation$FN
seq_window$FP <- evaluation$FP
seq_window$TP <- evaluation$TP
# conditional if df_final exists then rbind else create df_final
if(exists("df_final")){
df_final <- rbind(df_final, seq_window)
} else {
df_final <- seq_window
}
}
for (i in colnames(gecco_sample)[colnames(gecco_sample) != "event"]){
model <- hanct_kmeans(seq = 5, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
print(i)
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample[,'event'])
seq_window$TN <- evaluation$TN
seq_window$FN <- evaluation$FN
seq_window$FP <- evaluation$FP
seq_window$TP <- evaluation$TP
# conditional if df_final exists then rbind else create df_final
if(exists("df_final")){
df_final <- rbind(df_final, seq_window)
} else {
df_final <- seq_window
}
}
rm(df_final)
for (i in colnames(gecco_sample)[colnames(gecco_sample) != "event"]){
model <- hanct_kmeans(seq = 5, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
print(i)
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample[,'event'])
seq_window$recall <- evaluation$recall
seq_window$precision <- evaluation$precision
seq_window$F1 <- evaluation$F1
# conditional if df_final exists then rbind else create df_final
if(exists("df_final")){
df_final <- rbind(df_final, seq_window)
} else {
df_final <- seq_window
}
}
# Base directory for the datasets
base_dir <- "/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/Dataset"
# List of dataset filenames (without the base directory)
filenames <- c(
"gecco_sample.RData",
"nab_sample.RData",
"oil_3w_sample.RData",
"rare_sample.RData",
"ucr_sample.RData",
"yahoo_sample.RData"
)
load(file.path(base_dir,filenames[1]))
colnames(gecco_sample)
i <- 'fm_2'
model <- hanct_kmeans(seq = 5, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample[,'event'])
print(evaluation$confMatrix)
evaluation$recall
evaluation$precision
evaluation$F1
evaluation$TN
evaluation$FN
for (i in colnames(gecco_sample)[colnames(gecco_sample) != "event"]){
model <- hanct_kmeans(seq = 5, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
print(i)
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample[,'event'])
seq_window <- seq_window %>% mutate(variable = evaluation$recall)
seq_window <- seq_window %>% mutate(variable = evaluation$precision)
seq_window <- seq_window %>% mutate(variable = evaluation$F1)
# conditional if df_final exists then rbind else create df_final
if(exists("df_final")){
df_final <- rbind(df_final, seq_window)
} else {
df_final <- seq_window
}
}
df_final
rm(df_final)
for (i in colnames(gecco_sample)[colnames(gecco_sample) != "event"]){
model <- hanct_kmeans(seq = 5, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample[,'event'])
seq_window <- seq_window %>% mutate(variable = evaluation$recall)
seq_window <- seq_window %>% mutate(variable = evaluation$precision)
seq_window <- seq_window %>% mutate(variable = evaluation$F1)
# conditional if df_final exists then rbind else create df_final
if(exists("df_final")){
df_final <- rbind(df_final, seq_window)
} else {
df_final <- seq_window
}
}
df_final
rm(df_final)
for (i in colnames(gecco_sample)[colnames(gecco_sample) != "event"]){
model <- hanct_kmeans(seq = 5, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample[,'event'])
seq_window <- seq_window %>% mutate(recall = evaluation$recall)
seq_window <- seq_window %>% mutate(precision = evaluation$precision)
seq_window <- seq_window %>% mutate(F1 = evaluation$F1)
# conditional if df_final exists then rbind else create df_final
if(exists("df_final")){
df_final <- rbind(df_final, seq_window)
} else {
df_final <- seq_window
}
}
df_final
rm(df_final)
for (j in c(5, 10, 15, 20, 25, 30)) {
for (i in colnames(gecco_sample)[colnames(gecco_sample) != "event"]){
model <- hanct_kmeans(seq = j, centers = 2)
fitted_model <- fit(model, gecco_sample[,i])
detection <- detect(fitted_model, gecco_sample[,i])
seq_window <- detection %>% filter(event == TRUE)
seq_window <- seq_window %>% mutate(variable = i)
seq_window <- seq_window %>% mutate(dataset = "gecco_sample")
# evaluating the detections
evaluation <- evaluate(model, detection$event, gecco_sample[,'event'])
seq_window <- seq_window %>% mutate(recall = evaluation$recall)
seq_window <- seq_window %>% mutate(precision = evaluation$precision)
seq_window <- seq_window %>% mutate(F1 = evaluation$F1)
# conditional if df_final exists then rbind else create df_final
if(exists("df_final")){
df_final <- rbind(df_final, seq_window)
} else {
df_final <- seq_window
}
}
}
df_final
View(df_final)
