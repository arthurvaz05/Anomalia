source('/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/carregar_bases.R')
#loading Harbinger
load_library("daltoolbox")
load_library("harbinger")
###LOAD AND INSTALL
{
# Library to load and install if ins't already installed
#install.packages('pacman')
library(pacman)
vetor_pacotes <- c("ggplot2", "plotly", "dplyr", "kableExtra", "gridExtra",
"TSPred", "dbscan", "fpc", "factoextra", "fitdistrplus",
"logspline", "caret","RColorBrewer")
pacman::p_load(char = vetor_pacotes)
load_library("daltoolbox")
load_library("harbinger")
}
install.packages("devtools")
###LOAD AND INSTALL
{
# Library to load and install if ins't already installed
#install.packages('pacman')
library(pacman)
vetor_pacotes <- c("ggplot2", "plotly", "dplyr", "kableExtra", "gridExtra",
"TSPred", "dbscan", "fpc", "factoextra", "fitdistrplus",
"logspline", "caret","RColorBrewer")
pacman::p_load(char = vetor_pacotes)
load_library("daltoolbox")
load_library("harbinger")
}
install.packages('pacman')
###LOAD AND INSTALL
{
# Library to load and install if ins't already installed
#install.packages('pacman')
library(pacman)
vetor_pacotes <- c("ggplot2", "plotly", "dplyr", "kableExtra", "gridExtra",
"TSPred", "dbscan", "fpc", "factoextra", "fitdistrplus",
"logspline", "caret","RColorBrewer")
pacman::p_load(char = vetor_pacotes)
load_library("daltoolbox")
load_library("harbinger")
}
load_library("daltoolbox")
load_library("harbinger")
install.packages("daltoolbox")
install.packages("harbinger")
library(daltoolbox)
library(harbinger)
# establishing kmeans method
model <- hanct_kmeans(3)
# establishing kmeans method
model <- hanct_kmeans(10)
#ploting serie #1
plot_ts(x = 1:length(dataset$serie), y = dataset$serie,
xlab = "Time", ylab = "Value", main = "Serie #1")
#ploting serie #1
plot_ts(x = 1:length(dataset$serie), y = dataset$serie)
dataset <- gecco_sample
dataset%>%columns()
dataset%>%colnames()
#ploting serie #1
plot_ts(x = 1:length(dataset[,serie]), y = dataset[,serie])
serie <- tp
serie <- 'tp'
#ploting serie #1
plot_ts(x = 1:length(dataset[,serie]), y = dataset[,serie])
# establishing kmeans method
model <- hanct_kmeans(10)
# fitting the model
model <- fit(model, dataset[,serie])
# making detections of discords using kmeans
detection <- detect(model, dataset$serie)
# making detections of discords using kmeans
detection <- detect(model, dataset[,serie])
# filtering detected events
print(detection |> dplyr::filter(event==TRUE))
# evaluating the detections
evaluation <- evaluate(model, detection[,event])
print(evaluation$confMatrix)
event <- 'event'
# evaluating the detections
evaluation <- evaluate(model, detection[,event])
print(evaluation$confMatrix)
detection[,event]
# evaluating the detections
evaluation <- evaluate(model, detection[,event])
print(evaluation$confMatrix)
detection
# filtering detected events
print(detection |> dplyr::filter(event==TRUE))
detection[,event]
detection[,event]%>%table()
dataset[,event]%>%table()
# ploting the results
grf <- har_plot(model, dataset[,event])
plot(grf)
model
# ploting the results
grf <- har_plot(model, dataset[,event])
# ploting the results
grf <- har_plot(model, dataset$event)
# ploting the results
grf <- har_plot(model,dataset[,serie],detection ,dataset[,event])
plot(grf)
# filtering detected events
print(detection |> dplyr::filter(event==TRUE))
# ploting the results
grf <- har_plot(model,dataset[,serie],detection ,dataset[,event],idx=800:850)
# ploting the results
grf <- har_plot(model,dataset[,serie],detection ,dataset[,event],idx=800)
plot(grf)
# ploting the results
grf <- har_plot(model,dataset[,serie],detection ,dataset[,event],idx=800:850)
# ploting the results
grf <- har_plot(model,dataset[,serie],detection ,dataset[,event],idx=range(800:850))
# ploting the results
grf <- har_plot(model,dataset[,serie],detection ,dataset[,event],idx=c(800,801))
# ploting the results
grf <- har_plot(model,dataset[,serie],detection ,dataset[,event],idx=[800,801])
# ploting the results
grf <- har_plot(model,dataset[,serie],detection ,dataset[,event],idx=822)
plot(grf)
# ploting the results
grf <- har_plot(model,dataset[,serie],detection ,dataset[,event],idx=823)
plot(grf)
# ploting the results
grf <- har_plot(model,dataset[,serie],detection ,dataset[,event],idx=821)
plot(grf)
# ploting the results
grf <- har_plot(model,dataset[,serie],detection ,dataset[,event],idx=801)
plot(grf)
# ploting the results
grf <- har_plot(model,dataset[,serie],detection ,dataset[,event],idx=701)
plot(grf)
# ploting the results
grf <- har_plot(model,dataset[,serie],detection ,dataset[,event])
plot(grf)
dataset[800:850,serie]
# ploting the results
grf <- har_plot(model,dataset[800:850,serie],detection ,dataset[800:850,event])
plot(grf)
# ploting the results
grf <- har_plot(model,dataset[,serie],detection ,dataset[,event])
plot(grf)
model
detection
model
model$har_outliers()
model$har_outliers(dataset[,serie])
model$har_outliers(detection)
dataset[,event]%>%table()
source('/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/carregar_bases.R')
###LOAD AND INSTALL
{
# Library to load and install if ins't already installed
#install.packages('pacman')
library(pacman)
vetor_pacotes <- c("ggplot2", "plotly", "dplyr", "kableExtra", "gridExtra",
"TSPred", "dbscan", "fpc", "factoextra", "fitdistrplus",
"logspline", "caret","RColorBrewer")
pacman::p_load(char = vetor_pacotes)
library(daltoolbox)
library(harbinger)
}
dataset <- gecco_sample
dataset%>%colnames()
serie <- 'tp'
event <- 'event'
dataset[,event]%>%table()
#ploting serie #1
plot_ts(x = 1:length(dataset[,serie]), y = dataset[,serie])
# establishing kmeans method
model <- hanct_kmeans(5)
# fitting the model
model <- fit(model, dataset[,serie])
# making detections of discords using kmeans
detection <- detect(model, dataset[,serie])
# filtering detected events
print(detection |> dplyr::filter(event==TRUE))
detection[,event]%>%table()
detection
View(detection)
detection$event
detection |> dplyr::filter(event==TRUE)
seq_window <- detection |> dplyr::filter(event==TRUE)
seq_window
seq_window <- detection |> dplyr::filter(event==TRUE)
seq_window$idx
seq(1:seq_window$window[1])
seq_window$window[1]
seq(1:seq_window$window)
seq_window$window
seq(1:seq_window$seqlen)
seq(1:seq_window$seqlen)+seq_window$idx
seq_window$idx
seq(1:seq_window$seqlen)+(seq_window$idx-1)
View(dataset)
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/kmeans/janelas")
gecco_result <- readRDS("gecco_windons.RDS")
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/Dataset")
load("gecco_sample.RData")
source('/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/probab_anomalias_copy.R')
source('/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/probab_anomalias.R')
resultado <- probab(gecco_result,0.2,gecco_sample)
source('/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/probab_anomalias.R')
resultado <- probab(gecco_result,0.2,gecco_sample)
View(resultado)
source('/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/probab_anomalias.R')
resultado <- probab(gecco_result,0.2,gecco_sample)
resultado[[2]]
resultado <- probab(gecco_result,0.2,gecco_sample)
resultado
View(resultado)
