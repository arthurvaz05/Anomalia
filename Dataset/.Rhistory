nomes_dist_bic = fit_result$best_fit
)
probab_anomalias_bic[[j]] <- dados_anomalia[fit_result$is_anomaly]
probab_anomalias_bic <- list()
probab_anomalias_bic[[j]] <- dados_anomalia[fit_result$is_anomaly]
probab_anomalias_bic
results
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/kmeans/janelas")
gecco_result <- readRDS("gecco_windons.RDS")
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/Dataset")
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/kmeans/janelas")
gecco_result <- readRDS("gecco_windons.RDS")
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/Dataset")
load("gecco_sample.RData")
source('/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/probab_anomalias.R')
probab(gecco_result,0.2,gecco_sample)
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/kmeans/janelas")
gecco_result <- readRDS("gecco_windons.RDS")
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/Dataset")
load("gecco_sample.RData")
source('/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/probab_anomalias.R')
probab(gecco_result,0.2,gecco_sample)
data <- c(0.16,0.16,0.15,0.16,0.16)
if (any(data <= 0)) {
# If data contains non-positive values, generate the distribution test without lognormal and exponential
fits <- list(
fitdist(data, "unif"),
fitdist(data, "logis"),
fitdist(data, "norm")
)
gof_stats <- lapply(fits, gofstat)
} else if (length(unique(data)) == 1) {
# If all data points are identical (no variation), estimate parameters directly
fits <- list(best_fit = "Not Suitable",gof = NULL,is_anomaly = FALSE, NULL)
return(fits)
} else {
fits <- list(
fitdist(data, "gamma"),
fitdist(data, "lnorm"),
fitdist(data, "exp"),
fitdist(data, "gamma"),
fitdist(data, "unif"),
fitdist(data, "logis"),
fitdist(data, "norm")
)
gof_stats <- lapply(fits, gofstat)
}
var(data)
var(data)<=0.002
var(data) %>% round(2)
(var(data) %>% round(2))==0
if (any(data <= 0)) {
# If data contains non-positive values, generate the distribution test without lognormal and exponential
fits <- list(
fitdist(data, "unif"),
fitdist(data, "logis"),
fitdist(data, "norm")
)
gof_stats <- lapply(fits, gofstat)
} else if (length(unique(data)) == 1 && (var(data) %>% round(2))==0) {
# If all data points are identical (no variation), estimate parameters directly
fits <- list(best_fit = "Not Suitable",gof = NULL,is_anomaly = FALSE, NULL)
return(fits)
} else {
fits <- list(
fitdist(data, "gamma"),
fitdist(data, "lnorm"),
fitdist(data, "exp"),
fitdist(data, "gamma"),
fitdist(data, "unif"),
fitdist(data, "logis"),
fitdist(data, "norm")
)
gof_stats <- lapply(fits, gofstat)
}
if (any(data <= 0)) {
# If data contains non-positive values, generate the distribution test without lognormal and exponential
fits <- list(
fitdist(data, "unif"),
fitdist(data, "logis"),
fitdist(data, "norm")
)
gof_stats <- lapply(fits, gofstat)
} else if (length(unique(data)) == 1 || (var(data) %>% round(2))==0) {
# If all data points are identical (no variation), estimate parameters directly
fits <- list(best_fit = "Not Suitable",gof = NULL,is_anomaly = FALSE, NULL)
return(fits)
} else {
fits <- list(
fitdist(data, "gamma"),
fitdist(data, "lnorm"),
fitdist(data, "exp"),
fitdist(data, "gamma"),
fitdist(data, "unif"),
fitdist(data, "logis"),
fitdist(data, "norm")
)
gof_stats <- lapply(fits, gofstat)
}
if (any(data <= 0)) {
# If data contains non-positive values, generate the distribution test without lognormal and exponential
fits <- list(
fitdist(data, "unif"),
fitdist(data, "logis"),
fitdist(data, "norm")
)
gof_stats <- lapply(fits, gofstat)
} else if (length(unique(data)) == 1 | (var(data) %>% round(2))==0) {
# If all data points are identical (no variation), estimate parameters directly
fits <- list(best_fit = "Not Suitable",gof = NULL,is_anomaly = FALSE, NULL)
return(fits)
} else {
fits <- list(
fitdist(data, "gamma"),
fitdist(data, "lnorm"),
fitdist(data, "exp"),
fitdist(data, "gamma"),
fitdist(data, "unif"),
fitdist(data, "logis"),
fitdist(data, "norm")
)
gof_stats <- lapply(fits, gofstat)
}
(length(unique(data)) == 1 | (var(data) %>% round(2))==0)
if (any(data <= 0)) {
# If data contains non-positive values, generate the distribution test without lognormal and exponential
fits <- list(
fitdist(data, "unif"),
fitdist(data, "logis"),
fitdist(data, "norm")
)
gof_stats <- lapply(fits, gofstat)
} else if (length(unique(data)) == 1 | (var(data) %>% round(2))==0) {
# If all data points are identical (no variation), estimate parameters directly
fits <- list(best_fit = "Not Suitable",gof = NULL,is_anomaly = FALSE, NULL)
return(fits)
} else {
fits <- list(
fitdist(data, "gamma"),
fitdist(data, "lnorm"),
fitdist(data, "exp"),
fitdist(data, "gamma"),
fitdist(data, "unif"),
fitdist(data, "logis"),
fitdist(data, "norm")
)
gof_stats <- lapply(fits, gofstat)
}
fits
if (any(data <= 0)) {
# If data contains non-positive values, generate the distribution test without lognormal and exponential
fits <- list(
fitdist(data, "unif"),
fitdist(data, "logis"),
fitdist(data, "norm")
)
gof_stats <- lapply(fits, gofstat)
} else if (length(unique(data)) == 1 | (var(data) %>% round(2))==0) {
# If all data points are identical (no variation), estimate parameters directly
fits <- list(best_fit = "Not Suitable",gof = NULL,is_anomaly = FALSE, NULL)
} else {
fits <- list(
fitdist(data, "gamma"),
fitdist(data, "lnorm"),
fitdist(data, "exp"),
fitdist(data, "gamma"),
fitdist(data, "unif"),
fitdist(data, "logis"),
fitdist(data, "norm")
)
gof_stats <- lapply(fits, gofstat)
}
fits
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/kmeans/janelas")
gecco_result <- readRDS("gecco_windons.RDS")
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/Dataset")
load("gecco_sample.RData")
source('/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/probab_anomalias.R')
probab(gecco_result,0.2,gecco_sample)
data <- c(1848,1836,1847,1821,1885)
fitdist(data, "exp")
fits <- list()
distribution_list <- c("gamma", "lnorm", "exp", "gamma", "unif", "logis", "norm")
for (dist in distribution_list) {
tryCatch({
fits[[dist]] <- fitdist(data, dist)
}, error = function(e) {
cat("Error fitting distribution", dist, ": ", conditionMessage(e), "\n")
})
}
fits
data <- c(14,13,14,14,14)
fits <- list()
distribution_list <- c("gamma", "lnorm", "exp", "gamma", "unif", "logis", "norm")
for (dist in distribution_list) {
tryCatch({
fits[[dist]] <- fitdist(data, dist)
}, error = function(e) {
cat("Error fitting distribution", dist, ": ", conditionMessage(e), "\n")
})
}
fits
data <- c(14,-13,14,-14,14)
fits <- list()
distribution_list <- c("gamma", "lnorm", "exp", "gamma", "unif", "logis", "norm")
for (dist in distribution_list) {
tryCatch({
fits[[dist]] <- fitdist(data, dist)
}, error = function(e) {
cat("Error fitting distribution", dist, ": ", conditionMessage(e), "\n")
})
}
fits
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/kmeans/janelas")
gecco_result <- readRDS("gecco_windons.RDS")
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/Dataset")
load("gecco_sample.RData")
source('/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/probab_anomalias_copy.R')
probab(gecco_result,0.2,gecco_sample)
data <- c(727.2808,727.2808,727.2808,727.2808,727.2808)
fits <- list()
distribution_list <- c("gamma", "lnorm", "exp", "gamma", "unif", "logis", "norm")
for (dist in distribution_list) {
tryCatch({
fits[[dist]] <- fitdist(data, dist)
}, error = function(e) {
cat("Error fitting distribution", dist, ": ", conditionMessage(e), "\n")
})
}
fits
best_fit_idx <- which.min(sapply(gof_stats, function(x) x$bic))
best_fit <- names(best_fit_idx)
best_fit
best_fit <- unlist(strsplit(best_fit, "-"))[3]
if (best_fit %in% c("lognormal", "exp", "gamma", "unif", "logis")) {
params <- as.list(fits[[best_fit_idx]]$estimate)
is_anomaly <- switch(
best_fit,
lognormal = dlnorm(data, meanlog = params$meanlog, sdlog = params$sdlog) < limiar,
exp = dexp(data, rate = params$rate) < limiar,
gamma = dgamma(data, shape = params$shape, rate = params$rate) < limiar,
unif = dunif(data, min = params$min, max = params$max) < limiar,
logis = dlogis(data, location = params$location, scale = params$scale) < limiar
)
anomalias <- data[is_anomaly]
} else {
is_anomaly <- dnorm(data, mean = fits[[best_fit_idx]]$estimate$mean, sd = fits[[best_fit_idx]]$estimate$sd) < limiar
anomalias <- data[is_anomaly]
}
best_fit
dunif(data, min = params$min, max = params$max) < limiar
if (best_fit %in% c("lognormal", "exp", "gamma", "unif", "logis")) {
params <- as.list(fits[[best_fit_idx]]$estimate)
is_anomaly <- switch(
best_fit,
lognormal = dlnorm(data, meanlog = params$meanlog, sdlog = params$sdlog) < limiar,
exp = dexp(data, rate = params$rate) < limiar,
gamma = dgamma(data, shape = params$shape, rate = params$rate) < limiar,
unif = dunif(data, min = params$min, max = params$max) < limiar,
logis = dlogis(data, location = params$location, scale = params$scale) < limiar
)
anomalias <- data[is_anomaly]
} else {
is_anomaly <- dnorm(data, mean = fits[[best_fit_idx]]$estimate$mean, sd = fits[[best_fit_idx]]$estimate$sd) < limiar
anomalias <- data[is_anomaly]
}
params <- as.list(fits[[best_fit_idx]]$estimate)
fits[[best_fit_idx]]$estimate
fits[[best_fit_idx]]
fits
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/kmeans/janelas")
gecco_result <- readRDS("gecco_windons.RDS")
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/Dataset")
load("gecco_sample.RData")
source('/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/probab_anomalias_copy.R')
probab(gecco_result,0.2,gecco_sample)
data <- c(727.2808,727.2808,727.2808,727.2808,727.2808)
fits <- list()
distribution_list <- c("gamma", "lnorm", "exp", "gamma", "unif", "logis", "norm")
for (dist in distribution_list) {
tryCatch({
fits[[dist]] <- fitdist(data, dist)
}, error = function(e) {
cat("Error fitting distribution", dist, ": ", conditionMessage(e), "\n")
})
}
gof_stats <- lapply(fits, gofstat)
gof_stats
best_fit_idx <- which.min(sapply(gof_stats, function(x) x$bic))
best_fit <- names(best_fit_idx)
best_fit <- unlist(strsplit(best_fit, "-"))[3]
best_fit
data <- c(727.2808,727.2808,727.2808,727.2808,727.2808)
fits <- list()
distribution_list <- c("gamma", "lnorm", "exp", "gamma", "unif", "logis", "norm")
for (dist in distribution_list) {
tryCatch({
fits[[dist]] <- fitdist(data, dist)
}, error = function(e) {
cat("Error fitting distribution", dist, ": ", conditionMessage(e), "\n")
})
}
gof_stats <- lapply(fits, gofstat)
best_fit_idx <- which.min(sapply(gof_stats, function(x) x$bic))
best_fit <- names(best_fit_idx)
if best_fit == NULL {
best_fit
best_fit
best_fit == NULL
(best_fit == NULL)
if (is.null(best_fit)) {
best_fit <- "norm"
} else {
best_fit <- strsplit(best_fit, "-")[[1]][3]
}
best_fit
if (best_fit %in% c("lognormal", "exp", "gamma", "unif", "logis")) {
params <- as.list(fits[[best_fit_idx]]$estimate)
is_anomaly <- switch(
best_fit,
lognormal = dlnorm(data, meanlog = params$meanlog, sdlog = params$sdlog) < limiar,
exp = dexp(data, rate = params$rate) < limiar,
gamma = dgamma(data, shape = params$shape, rate = params$rate) < limiar,
unif = dunif(data, min = params$min, max = params$max) < limiar,
logis = dlogis(data, location = params$location, scale = params$scale) < limiar
)
anomalias <- data[is_anomaly]
} else {
is_anomaly <- dnorm(data, mean = fits[[best_fit_idx]]$estimate$mean, sd = fits[[best_fit_idx]]$estimate$sd) < limiar
anomalias <- data[is_anomaly]
}
fits[[best_fit_idx]]
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/kmeans/janelas")
gecco_result <- readRDS("gecco_windons.RDS")
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/Dataset")
load("gecco_sample.RData")
source('/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/probab_anomalias_copy.R')
probab(gecco_result,0.2,gecco_sample)
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/kmeans/janelas")
gecco_result <- readRDS("gecco_windons.RDS")
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/Dataset")
load("gecco_sample.RData")
source('/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/probab_anomalias_copy.R')
probab(gecco_result,0.2,gecco_sample)
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/kmeans/janelas")
gecco_result <- readRDS("gecco_windons.RDS")
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/Dataset")
load("gecco_sample.RData")
source('/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/probab_anomalias_copy.R')
probab(gecco_result,0.2,gecco_sample)
data <- c(0.024,0.023,0.024,0.024,0.030,0.036,0.024,0.023,0.023,0.023,0.024,0.024,0.024,0.024,0.024)
fits <- list()
distribution_list <- c("gamma", "lnorm", "exp", "gamma", "unif", "logis", "norm")
for (dist in distribution_list) {
tryCatch({
fits[[dist]] <- fitdist(data, dist)
}, error = function(e) {
cat("Error fitting distribution", dist, ": ", conditionMessage(e), "\n")
})
}
gof_stats <- lapply(fits, gofstat)
best_fit_idx <- which.min(sapply(gof_stats, function(x) x$bic))
best_fit <- names(best_fit_idx)
if (is.null(best_fit)) {
fits <- list(best_fit = "Not Suitable",gof = NULL,is_anomaly = FALSE, NULL)
return(fits)
} else {
best_fit <- strsplit(best_fit, "-")[[1]][3]
}
if (best_fit %in% c("lognormal", "exp", "gamma", "unif", "logis")) {
params <- as.list(fits[[best_fit_idx]]$estimate)
is_anomaly <- switch(
best_fit,
lognormal = dlnorm(data, meanlog = params$meanlog, sdlog = params$sdlog) < limiar,
exp = dexp(data, rate = params$rate) < limiar,
gamma = dgamma(data, shape = params$shape, rate = params$rate) < limiar,
unif = dunif(data, min = params$min, max = params$max) < limiar,
logis = dlogis(data, location = params$location, scale = params$scale) < limiar
)
anomalias <- data[is_anomaly]
} else {
is_anomaly <- dnorm(data, mean = fits[[best_fit_idx]]$estimate$mean, sd = fits[[best_fit_idx]]$estimate$sd) < limiar
anomalias <- data[is_anomaly]
}
best_fit
if (best_fit %in% c("lognormal", "exp", "gamma", "unif", "logis")) {
params <- as.list(fits[[best_fit_idx]]$estimate)
is_anomaly <- switch(
best_fit,
lognormal = dlnorm(data, meanlog = params$meanlog, sdlog = params$sdlog) < limiar,
exp = dexp(data, rate = params$rate) < limiar,
gamma = dgamma(data, shape = params$shape, rate = params$rate) < limiar,
unif = dunif(data, min = params$min, max = params$max) < limiar,
logis = dlogis(data, location = params$location, scale = params$scale) < limiar
)
anomalias <- data[is_anomaly]
} else {
print("nao achou")
is_anomaly <- dnorm(data, mean = fits[[best_fit_idx]]$estimate$mean, sd = fits[[best_fit_idx]]$estimate$sd) < limiar
anomalias <- data[is_anomaly]
}
best_fit
if (best_fit %in% c("lnorm", "exp", "gamma", "unif", "logis")) {
params <- as.list(fits[[best_fit_idx]]$estimate)
is_anomaly <- switch(
best_fit,
lognormal = dlnorm(data, meanlog = params$meanlog, sdlog = params$sdlog) < limiar,
exp = dexp(data, rate = params$rate) < limiar,
gamma = dgamma(data, shape = params$shape, rate = params$rate) < limiar,
unif = dunif(data, min = params$min, max = params$max) < limiar,
logis = dlogis(data, location = params$location, scale = params$scale) < limiar
)
anomalias <- data[is_anomaly]
} else {
print("nao achou")
is_anomaly <- dnorm(data, mean = fits[[best_fit_idx]]$estimate$mean, sd = fits[[best_fit_idx]]$estimate$sd) < limiar
anomalias <- data[is_anomaly]
}
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/kmeans/janelas")
gecco_result <- readRDS("gecco_windons.RDS")
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/Dataset")
load("gecco_sample.RData")
source('/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/probab_anomalias_copy.R')
probab(gecco_result,0.2,gecco_sample)
data <- c(1715, 1677, 1674, 1679, 1729, 1703, 1673, 1763, 1702, 1712, 1700, 1694, 1638, 1723, 1782, 1692, 1760, 1718, 1746, 1686,
1714, 1723, 1718, 1740, 1626, 1627, 1663, 1586, 1642, 1649)
fits <- list()
distribution_list <- c("gamma", "lnorm", "exp", "gamma", "unif", "logis", "norm")
for (dist in distribution_list) {
tryCatch({
fits[[dist]] <- fitdist(data, dist)
}, error = function(e) {
cat("Error fitting distribution", dist, ": ", conditionMessage(e), "\n")
})
}
gof_stats <- lapply(fits, gofstat)
best_fit_idx <- which.min(sapply(gof_stats, function(x) x$bic))
best_fit <- names(best_fit_idx)
if (is.null(best_fit)) {
fits <- list(best_fit = "Not Suitable",gof = NULL,is_anomaly = FALSE, NULL)
return(fits)
} else {
best_fit <- strsplit(best_fit, "-")[[1]][3]
}
if (best_fit %in% c("lnorm", "exp", "gamma", "unif", "logis")) {
params <- as.list(fits[[best_fit_idx]]$estimate)
is_anomaly <- switch(
best_fit,
lognormal = dlnorm(data, meanlog = params$meanlog, sdlog = params$sdlog) < limiar,
exp = dexp(data, rate = params$rate) < limiar,
gamma = dgamma(data, shape = params$shape, rate = params$rate) < limiar,
unif = dunif(data, min = params$min, max = params$max) < limiar,
logis = dlogis(data, location = params$location, scale = params$scale) < limiar
)
anomalias <- data[is_anomaly]
} else {
print("nao achou")
is_anomaly <- dnorm(data, mean = fits[[best_fit_idx]]$estimate$mean, sd = fits[[best_fit_idx]]$estimate$sd) < limiar
anomalias <- data[is_anomaly]
}
best_fit
fits[[best_fit_idx]]$estimate$mean
fits
best_fit_idx
fits[[best_fit_idx]]
fits[[best_fit_idx]]$estimate
fits[[best_fit_idx]]$estimate$mean
fits[[best_fit_idx]]$estimate
fits[[best_fit_idx]]$estimate[[mean]]
fits[[best_fit_idx]]$estimate['mean']
fits[[best_fit_idx]]$estimate[['mean']]
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/kmeans/janelas")
gecco_result <- readRDS("gecco_windons.RDS")
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/Dataset")
load("gecco_sample.RData")
source('/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/probab_anomalias_copy.R')
probab(gecco_result,0.2,gecco_sample)
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/kmeans/janelas")
gecco_result <- readRDS("gecco_windons.RDS")
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/Dataset")
load("gecco_sample.RData")
source('/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/probab_anomalias_copy.R')
probab(gecco_result,0.2,gecco_sample)
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/kmeans/janelas")
gecco_result <- readRDS("gecco_windons.RDS")
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/Dataset")
load("gecco_sample.RData")
source('/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/probab_anomalias_copy.R')
probab(gecco_result,0.2,gecco_sample)
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/kmeans/janelas")
gecco_result <- readRDS("gecco_windons.RDS")
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/Dataset")
load("gecco_sample.RData")
source('/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/probab_anomalias_copy.R')
probab(gecco_result,0.2,gecco_sample)
resultado <- probab(gecco_result,0.2,gecco_sample)
View(resultado)
resultado[[1]]
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/kmeans/janelas")
gecco_result <- readRDS("gecco_windons.RDS")
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/Dataset")
load("gecco_sample.RData")
source('/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/probab_anomalias_copy.R')
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/kmeans/janelas")
gecco_result <- readRDS("gecco_windons.RDS")
setwd("/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/Dataset")
load("gecco_sample.RData")
source('/Users/arthurvaz/Desktop/CEFETRJ - Mestrado/Anomalia/Anomalia/probab_anomalias_copy.R')
resultado <- probab(gecco_result,0.2,gecco_sample)
resultado[[1]]
View(resultado)
resultado[[2]]
